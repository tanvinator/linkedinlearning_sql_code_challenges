--Challenge 1: Difficulty 1/4
--Create Invitations for a party
----Challenge Description:
------- Generate a list of customer information:
----Requirements:
------- First name, Last name, email address, alphabetical by last name

--Query

SELECT FirstName AS First_name, LastName AS Last_name, Email
FROM Customers
ORDER BY Last_name;

--======================================================================================================

--Challenge 2: Difficulty 1/4
--Create a table to store information
----Challenge Description:
------- Create a table to store response info:
----Requirements:
------- customer id, party size, 

--Query

CREATE TABLE attendance_response(
"CustomerID" INT,
"PartySize" INT
);

--======================================================================================================
--Challenge 3: Difficulty 1/4
--Print a menu
----Challenge Description:
------- Create three different menus
----Requirements:
------- 1: All items sorted by price, low to high
------- 2: Appetizer hour menu with appetizers and beverages, by type
------- 3: An all time menu with all items except beverages, by type

--Query

--Menu 1:
SELECT *
FROM Dishes
ORDER BY Price;

--Menu 2:
SELECT *
FROM Dishes
WHERE Type IN ('Beverage', 'Appetizer')
ORDER BY Type;

--Menu 3:
SELECT *
FROM Dishes
WHERE Type != 'Beverage'
ORDER BY Type;

--======================================================================================================
--Challenge 4: Difficulty 2/4
--Sign a customer up for your loyalty program
----Challenge Description:
------- Add customer information into our database
----Requirements:
------- Add one row of data for Anna 

--Query:

SELECT * 
FROM Customers;

INSERT INTO Customers
  ( FirstName, LastName, Email, Address, 
    City, State, Phone, Birthday) 
  VALUES
  ('Anna', 'Smith', 'asmith@kinetecoinc.com', '479 Lapis Dr.', 
   'Memphis', 'TN', '(555) 555-1212', '1973-07-21' );

--======================================================================================================
--Challenge 5: Difficulty 2/4
--Update a customer's personal information
----Challenge Description:
------- Update the information for Taylor 
----Requirements:
------- Taylor Jenkins: 
------- Old : 27170 6th Ave., Washington, Description
------- New : 74 Pine St., New York, NY


--Query:

UPDATE Customers
  SET Address = '74 Pine St.', City = 'New York', State = 'NY'
  WHERE CustomerID IN(
	SELECT CustomerID
	FROM Customers
	WHERE FirstName = 'Taylor' 
		AND LastName = 'Jenkins' 
		AND Address = '27170 6th Center');
		
SELECT *
	FROM Customers
	WHERE FirstName = 'Taylor' 
		AND LastName = 'Jenkins';

--======================================================================================================
--Challenge 6: Difficulty 2/4
--Delete a customer's record
----Challenge Description:
------- Delete the information for Taylor 

--Query:

DELETE FROM Customers
WHERE FirstName = 'Taylor' 
		AND LastName = 'Jenkins'
		AND Email = 'tjenkins@rouxacademy.org';
		
SELECT *
	FROM Customers
	WHERE FirstName = 'Taylor' 
		AND LastName = 'Jenkins';

--======================================================================================================
--Challenge 7: Difficulty 2/4
--Log customers responses
----Challenge Description: 
------- Add into customer attendace TABLE
----Requirements:
------- Email id : atapley2j@kinetecoinc.com, Party size = 4

--Query:

INSERT INTO attendance_response
(CustomerID, PartySize)
VALUES(
(SELECT CustomerID 
FROM Customers
WHERE Email = 'atapley2j@kinetecoinc.com')
, 4);

SELECT * 
FROM attendance_response;

--======================================================================================================
--Challenge 8: Difficulty 3/4
--Look up reservations 
----Challenge Description: 
------- reservation for last name stevenson or something like that
----Requirements:
------- 

--Query 1 by join:

SELECT c.FirstName, c.LastName, r.Date, r.PartySize
FROM Reservations AS r
JOIN Customers AS c
ON c.CustomerID = r.CustomerID
WHERE c.LastName LIKE 'st%n'
AND r.PartySize = '4'
ORDER BY r.Date DESC;  

--Query 2 by subquery:

SELECT *
FROM Reservations
WHERE CustomerID IN
(SELECT CustomerID
FROM Customers
WHERE LastName LIKE 'st%n');

--======================================================================================================
--Challenge 9: Difficulty 3/4
--Taking reservations 
----Challenge Description: 
------- reservation for the person
----Requirements:
------- Sam McAdams 14 July 2020, 6pm, (5 people)
------- smac@rouxacademy.com / (555) 555-1212

--Query:

SELECT *
FROM Reservations

SELECT *
FROM Customers
WHERE FirstName = 'Sam' AND Email = 'smac@rouxacademy.com';

INSERT INTO Customers (FirstName, LastName, Email, Phone) VALUES ('Sam', 'McAdams', 'smac@rouxacademy.com', '(555) 555-1212');

INSERT INTO Reservations (CustomerID, Date, PartySize) 
VALUES ((SELECT CustomerID
		 FROM Customers
		 WHERE FirstName = 'Sam' AND Email = 'smac@rouxacademy.com'), 
		'2020-07-14 18:00:00', 5);

SELECT * 
FROM Reservations
WHERE Date = '2020-07-14 18:00:00';

--======================================================================================================
--Challenge 10: Difficulty 4/4
--Take a delivery order
----Challenge Description: 
------- Take order and find total cost
----Requirements:
------- Create an Order. Find the Customer, Create the order record, add items to the order,
------- Find the total cost

--Query:

--Finding customer ID
SELECT CustomerID, FirstName, LastName, Phone
FROM Customers
WHERE FirstName = 'Loretta' AND LastName = 'Hundey';


--Checking if order is created for her
SELECT * 
FROM Orders
WHERE CustomerID = '70'
ORDER BY OrderDate DESC;

--Insert oder 
INSERT INTO Orders (OrderID,CustomerID, OrderDate) VALUES ('1001', '70', '2020-03-20 18:00:00');

-- Checking if any dishes corresponding to order id 1001
SELECT * 
FROM OrdersDishes
WHERE OrderID = '1001';


--Inderting the dishes
INSERT INTO OrdersDishes (OrderID, DishID) VALUES 
												('1001', (SELECT DishID FROM Dishes WHERE Name ='House Salad')),
												('1001', (SELECT DishID FROM Dishes WHERE Name ='Mini Cheeseburgers')),
												('1001', (SELECT DishID FROM Dishes WHERE Name ='Tropical Blue Smoothie'));

--Joining the tables to get the final result
SELECT SUM(Dishes.Price)
FROM Dishes
JOIN OrdersDishes
ON Dishes.DishID = OrdersDishes.DishID
WHERE OrdersDishes.OrderID = "1001";

--======================================================================================================
--Challenge 11: Difficulty 4/4
--Track your customer's favorite dishes
----Challenge Description: 
------- Set Cleo Goldwater's favorite dish to Quinoa Salmon Salad


--Query:

UPDATE Customers
SET FavoriteDish = (SELECT DishID
                     FROM Dishes
                     WHERE Name = 'Quinoa Salmon Salad')
WHERE FirstName = 'Cleo' AND LastName = 'Goldwater';

SELECT * 
FROM Customers
WHERE FirstName = 'Cleo';

--======================================================================================================
--Challenge 12: Difficulty 4/4
--Prepare a report of your top 5 customers
----Challenge Description: 
------- Generate a list of the five customers who have placed the most to-go Orders
---- Requirements:
------- Number of orders, First name, last name, email, sort by number of orders


--Query:

SELECT * 
FROM Customers;

SELECT *
FROM Orders;

SELECT C.FirstName, C.LastName, C.Email, COUNT(O.CustomerID) AS num_orders
FROM Orders AS O
JOIN Customers AS C
ON O.CustomerID = C.CustomerID
GROUP BY O.CustomerID
ORDER BY num_orders DESC
LIMIT 5;




